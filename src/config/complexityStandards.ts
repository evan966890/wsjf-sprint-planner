/**
 * WSJF Sprint Planner - 技术复杂度10分制评分标准配置
 *
 * v1.3.0: 定义完整的技术复杂度10分制评分标准
 *
 * 评分维度：
 * - 技术难度：实现的技术挑战程度
 * - 架构影响：对系统架构的影响范围
 * - 技术风险：不确定性和潜在风险
 * - 依赖复杂度：涉及的系统、模块、第三方依赖
 * - 测试要求：测试覆盖的难度和范围
 *
 * 参考工作量：仅供参考，具体以实际评估为准
 */

import type { ComplexityStandard } from '../types';

export const COMPLEXITY_STANDARDS: ComplexityStandard[] = [
  // ========== 10分 - 全新技术平台 ==========
  {
    score: 10,
    name: '全新技术平台',
    shortDescription: '构建全新平台或核心基础设施',
    technicalChallenge: [
      '从零构建全新的技术平台或基础设施',
      '涉及复杂的分布式系统设计、高并发架构',
      '需要完整的技术预研、POC验证、技术选型',
      '涉及多个技术领域的深度整合（前端、后端、大数据、AI等）'
    ],
    architectureImpact: [
      '构建全新的技术平台，影响公司级技术架构',
      '建立新的技术标准和规范，影响所有后续项目',
      '涉及多个子系统的完整重构或新建'
    ],
    technicalRisk: [
      '技术不确定性极高，可能需要多次方案调整',
      '需要克服技术难题，可能无现成解决方案',
      '对团队技术能力要求极高，需要专家级别把控',
      '失败成本极高，需要充分的风险评估和预案'
    ],
    typicalCases: [
      '从零搭建企业级中台：包括业务中台、数据中台、技术中台',
      '构建大数据平台：从数据采集、存储、计算到可视化的完整体系',
      'AI平台建设：机器学习平台、模型训练/推理基础设施',
      '全新ERP系统：从零构建涵盖所有业务线的ERP系统',
      '实时数据处理平台：支持百万级QPS的流式计算平台'
    ],
    testingRequirement: [
      '需要完整的测试体系：单元测试、集成测试、性能测试、压力测试',
      '需要建立完善的监控和告警体系',
      '需要灰度发布和AB测试能力',
      '需要完整的回滚和容灾方案'
    ],
    estimatedEffort: '30-60人天或更长（通常是多人协作的大型项目）'
  },

  // ========== 9分 - 核心架构重构 ==========
  {
    score: 9,
    name: '核心架构重构',
    shortDescription: '核心架构重大重构，涉及技术债偿还',
    technicalChallenge: [
      '核心业务架构的重大重构，技术难度极高',
      '需要保证业务连续性，同时进行底层架构替换',
      '涉及大量遗留代码的理解和重构',
      '需要处理数据迁移、双写、回滚等复杂场景'
    ],
    architectureImpact: [
      '影响核心业务系统的底层架构',
      '涉及多个核心子系统的联动改造',
      '改变系统间的调用关系和数据流向'
    ],
    technicalRisk: [
      '极高风险，一旦失败影响核心业务',
      '需要详细的技术方案和分阶段实施计划',
      '需要充分的测试和灰度验证',
      '需要完善的回滚预案和应急响应机制'
    ],
    typicalCases: [
      '单体应用拆分为微服务：包括服务拆分、数据拆分、分布式事务处理',
      '数据库迁移：从MySQL迁移到PostgreSQL，或从SQL迁移到NoSQL',
      '实时化改造：批处理系统改造为实时流式处理',
      '同步调用改造为异步消息：引入消息队列，重构核心业务流程',
      '前端技术栈升级：从AngularJS迁移到React，需要重写大部分页面'
    ],
    testingRequirement: [
      '需要完整的自动化测试覆盖',
      '需要性能基准测试和对比',
      '需要灰度发布和流量切换方案',
      '需要数据一致性校验机制'
    ],
    estimatedEffort: '20-40人天（通常需要多人协作）'
  },

  // ========== 8分 - 系统级改造 ==========
  {
    score: 8,
    name: '系统级改造',
    shortDescription: '系统架构级改造，影响多个子系统',
    technicalChallenge: [
      '系统架构级别的改造，技术难度高',
      '需要协调多个子系统的联动改造',
      '涉及复杂的接口设计和数据同步',
      '需要考虑向下兼容和平滑迁移'
    ],
    architectureImpact: [
      '影响多个子系统的接口和数据流',
      '可能引入新的中间件或基础组件',
      '改变部分核心业务流程的技术实现'
    ],
    technicalRisk: [
      '高风险，需要详细方案和充分评审',
      '需要多轮测试和验证',
      '需要考虑回滚方案和数据恢复',
      '可能需要停机维护或分阶段迁移'
    ],
    typicalCases: [
      '引入分布式缓存：Redis集群搭建、缓存策略设计、缓存一致性保证',
      '支付系统改造：对接多个支付渠道、统一支付网关、对账系统',
      '权限体系升级：从RBAC升级到ABAC，涉及所有业务系统改造',
      '消息推送平台：统一的消息中心，支持多种推送渠道（短信、邮件、站内信、App推送）',
      '多租户改造：将单租户系统改造为支持多租户的SaaS平台'
    ],
    testingRequirement: [
      '需要完整的功能测试和回归测试',
      '需要性能测试和容量规划',
      '需要安全测试和数据保护验证',
      '需要演练回滚和应急预案'
    ],
    estimatedEffort: '15-30人天'
  },

  // ========== 7分 - 复杂功能开发 ==========
  {
    score: 7,
    name: '复杂功能开发',
    shortDescription: '开发复杂新功能，涉及前后端和数据库',
    technicalChallenge: [
      '开发复杂的新功能，技术挑战较大',
      '涉及前后端、数据库、缓存等多层改造',
      '需要设计复杂的业务逻辑和算法',
      '可能涉及第三方服务集成'
    ],
    architectureImpact: [
      '在现有架构上增加较为复杂的新模块',
      '可能需要新增数据库表和索引优化',
      '可能需要引入新的技术组件（如Elasticsearch、Redis等）'
    ],
    technicalRisk: [
      '中高风险，需要充分的技术评审',
      '需要考虑性能影响和优化方案',
      '需要完整的测试覆盖',
      '需要监控和日志埋点'
    ],
    typicalCases: [
      'AI智能推荐：基于用户行为和商品属性的推荐算法、离线训练、在线推理',
      '复杂规则引擎：价格计算引擎、促销规则引擎、库存分配规则',
      '实时数据看板：基于WebSocket的实时数据推送、复杂的数据聚合和计算',
      '全文搜索功能：集成Elasticsearch、分词器配置、搜索算法优化',
      '审批工作流：动态审批流程配置、多级审批、条件分支、抄送通知'
    ],
    testingRequirement: [
      '需要完整的单元测试和集成测试',
      '需要边界场景和异常场景测试',
      '需要性能测试（如果涉及高并发）',
      '需要用户验收测试'
    ],
    estimatedEffort: '10-20人天'
  },

  // ========== 6分 - 核心流程优化 ==========
  {
    score: 6,
    name: '核心流程优化',
    shortDescription: '优化核心业务流程，涉及多个模块',
    technicalChallenge: [
      '优化核心业务流程，需要深入理解现有逻辑',
      '涉及多个模块的协同改造',
      '需要保证优化后的正确性和性能提升',
      '可能涉及算法优化或SQL优化'
    ],
    architectureImpact: [
      '影响核心业务流程的实现方式',
      '可能调整模块间的调用关系',
      '可能涉及数据库表结构优化或索引调整'
    ],
    technicalRisk: [
      '中等风险，需要充分的回归测试',
      '需要性能对比和基准测试',
      '建议灰度发布，观察线上表现',
      '需要回滚预案'
    ],
    typicalCases: [
      '订单流程优化：简化订单状态流转、减少数据库查询、提升处理速度',
      '库存扣减优化：从悲观锁改为乐观锁、引入分布式锁、防止超卖',
      '报表生成优化：从实时计算改为定时预计算、引入缓存、查询速度提升10倍',
      '批量操作优化：支持批量导入导出、异步处理、进度反馈',
      '接口性能优化：从串行调用改为并行调用、减少不必要的查询、响应时间从3s降到500ms'
    ],
    testingRequirement: [
      '需要完整的功能回归测试',
      '需要性能对比测试',
      '需要验证数据一致性',
      '需要监控优化效果'
    ],
    estimatedEffort: '8-15人天'
  },

  // ========== 5分 - 新增独立功能 ==========
  {
    score: 5,
    name: '新增独立功能',
    shortDescription: '新增独立功能模块，不影响核心流程',
    technicalChallenge: [
      '新增一个相对独立的功能模块',
      '技术实现较为常规，有成熟方案可参考',
      '不影响现有核心业务流程',
      '可能需要调用现有接口或新增部分接口'
    ],
    architectureImpact: [
      '在现有架构上新增模块，影响范围可控',
      '可能需要新增数据库表或字段',
      '基本不影响现有模块的运行'
    ],
    technicalRisk: [
      '低中风险，主要风险在于新功能本身的质量',
      '需要测试新功能的各种场景',
      '对现有功能影响小，但需要回归测试核心路径'
    ],
    typicalCases: [
      '导出功能：支持Excel/CSV导出、自定义导出字段、异步导出大数据量',
      '新增报表：新增一个业务报表页面、数据查询、图表展示',
      '消息通知：新增站内信/邮件/短信通知功能',
      '操作日志：记录关键操作的日志、支持查询和审计',
      '数据导入：支持Excel/CSV导入、数据校验、批量创建'
    ],
    testingRequirement: [
      '需要测试新功能的主要场景',
      '需要测试边界条件和异常情况',
      '需要简单的回归测试',
      '需要验证数据准确性'
    ],
    estimatedEffort: '5-10人天'
  },

  // ========== 4分 - 多点联动修改 ==========
  {
    score: 4,
    name: '多点联动修改',
    shortDescription: '涉及多个组件/页面的协同修改',
    technicalChallenge: [
      '涉及多个组件或页面的协同修改',
      '需要调整数据流和状态管理',
      '可能需要新增字段并在多处展示和编辑',
      '技术难度不高，但需要细心处理联动关系'
    ],
    architectureImpact: [
      '影响多个前端组件或后端接口',
      '可能需要调整数据模型和接口字段',
      '基本不影响架构，局部调整'
    ],
    technicalRisk: [
      '中低风险，主要风险在于遗漏某个联动点',
      '需要完整的回归测试',
      '需要检查所有相关页面和接口'
    ],
    typicalCases: [
      '新增字段：在需求表中新增"业务团队"字段，涉及新增、编辑、列表、详情、筛选等多处修改',
      '状态联动：订单状态变更时，同步更新库存、财务、物流等多个模块',
      '权限调整：调整某个角色的权限，涉及多个页面的按钮显示和接口鉴权',
      '样式统一：统一调整多个页面的风格、布局、交互方式',
      '数据同步：A模块修改后，需要同步更新B模块和C模块的展示'
    ],
    testingRequirement: [
      '需要测试所有涉及的页面和功能点',
      '需要检查数据一致性',
      '需要回归测试相关流程'
    ],
    estimatedEffort: '3-6人天'
  },

  // ========== 3分 - 单点功能增强 ==========
  {
    score: 3,
    name: '单点功能增强',
    shortDescription: '在现有功能上增加简单逻辑',
    technicalChallenge: [
      '在现有功能基础上增加简单逻辑',
      '不涉及新模块，只是增强现有功能',
      '技术实现简单，有明确的实现路径'
    ],
    architectureImpact: [
      '影响单个模块或组件',
      '不涉及架构调整',
      '基本不影响其他模块'
    ],
    technicalRisk: [
      '低风险，影响范围局限',
      '需要测试新增的逻辑',
      '需要简单回归测试'
    ],
    typicalCases: [
      '增加表单校验：新增字段的必填校验、格式校验、长度校验',
      '增加筛选条件：在列表页新增一个筛选下拉框',
      '数据处理逻辑：对某个字段进行格式化、计算、转换',
      '增加提示信息：在某个操作后增加成功/失败提示',
      '增加默认值：为某个字段设置默认值或自动填充'
    ],
    testingRequirement: [
      '测试新增逻辑的正确性',
      '测试边界条件',
      '简单回归测试'
    ],
    estimatedEffort: '1-3人天'
  },

  // ========== 2分 - 简单UI调整 ==========
  {
    score: 2,
    name: '简单UI调整',
    shortDescription: '单个页面的样式、文案、简单交互',
    technicalChallenge: [
      '单个页面的样式、文案、简单交互修改',
      '纯前端修改，不涉及接口和数据库',
      '技术难度很低，主要是UI实现'
    ],
    architectureImpact: [
      '只影响前端展示',
      '不涉及架构'
    ],
    technicalRisk: [
      '低风险，影响范围小',
      '主要测试UI显示是否正确'
    ],
    typicalCases: [
      '修改按钮颜色、大小、位置',
      '调整页面布局、间距、对齐方式',
      '修改文案、提示信息',
      '调整图标、字体大小',
      '增加简单的CSS动画效果'
    ],
    testingRequirement: [
      '检查UI显示是否符合预期',
      '多浏览器兼容性测试（如果需要）',
      '响应式布局测试（如果涉及）'
    ],
    estimatedEffort: '0.5-2人天'
  },

  // ========== 1分 - 配置级修改 ==========
  {
    score: 1,
    name: '配置级修改',
    shortDescription: '纯配置修改，无代码变更',
    technicalChallenge: [
      '纯配置修改，无代码变更',
      '或极简单的代码修改（如常量、文案）',
      '几乎无技术难度'
    ],
    architectureImpact: [
      '不涉及架构',
      '不影响任何模块'
    ],
    technicalRisk: [
      '几乎无风险',
      '简单验证即可'
    ],
    typicalCases: [
      '修改环境变量、配置文件',
      '调整配置参数（如超时时间、限流阈值）',
      '修改静态文案、错误提示',
      '修改枚举值、常量定义',
      '开关功能开关（feature toggle）'
    ],
    testingRequirement: [
      '简单验证配置生效',
      '基本功能冒烟测试'
    ],
    estimatedEffort: '0.1-0.5人天'
  }
];

/**
 * 根据分值获取复杂度标准
 */
export const getComplexityStandard = (score: number): ComplexityStandard | undefined => {
  return COMPLEXITY_STANDARDS.find(s => s.score === score);
};

/**
 * 获取所有复杂度标准（按分值降序）
 */
export const getAllComplexityStandards = (): ComplexityStandard[] => {
  return [...COMPLEXITY_STANDARDS].sort((a, b) => b.score - a.score);
};
