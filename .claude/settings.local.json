{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:fix:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nFeature: 配置 ESLint 并修复所有 lint 错误\n\n- 添加 ESLint 及相关插件（TypeScript、React）\n- 配置现代 ESLint 9 flat config 格式\n- 添加 lint 和 lint:fix 脚本到 package.json\n- 修复 React hooks 纯度问题（useState 使用函数初始化器）\n- 配置浏览器全局变量支持\n- 所有 lint 错误已修复，仅剩 11 个 any 类型警告\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "Bash(cat:*)",
      "Bash(curl:*)",
      "Bash(npm run preview:*)",
      "Bash(git checkout:*)",
      "Bash(git reset:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nRelease: v1.0.0 - 纯前端完整版\n\n这是WSJF Sprint Planner的首个生产就绪版本，包含完整的功能和代码质量提升。\n\n核心功能：\n- 完整的WSJF评分算法（含归一化和星级分档）\n- 气泡视图和列表视图双模式\n- 流畅的拖拽式排期交互\n- 多维度筛选和灵活排序\n- Excel批量导入导出（支持智能列映射）\n- PDF/截图导出功能\n- 本地数据持久化\n- 用户登录和会话管理\n\n代码质量提升：\n- 添加完整的TypeScript类型定义和详细的中文注释\n- 健壮性改进：数值计算安全性检查、数组边界验证、空值保护、除以0防护\n- 响应式设计和用户体验优化\n\nUI/UX改进：\n- 优化列表视图的横向滚动显示\n- 合并统计信息节省空间\n- 增强进度条可读性\n- 支持超容量拖拽并显示警告状态\n- 必填字段标注和表单验证\n\n技术细节：\n- 单文件架构（src/wsjf-sprint-planner.tsx）\n- 纯前端应用，无需后端服务器\n- 构建验证通过（TypeScript编译 + Vite生产构建）\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git tag -a v1.0.0 -m \"$(cat <<''EOF''\nv1.0.0 - 纯前端完整版（首个生产就绪版本）\n\n重大里程碑：\n这是WSJF Sprint Planner的首个生产就绪版本，标志着纯前端实现的完整功能交付。\n\n核心特性：\n✅ 完整的WSJF评分算法（含归一化和星级分档）\n✅ 气泡视图和列表视图双模式切换\n✅ 流畅的拖拽式排期交互\n✅ 多维度筛选和灵活排序功能\n✅ Excel批量导入导出（支持智能列映射）\n✅ PDF/截图导出功能\n✅ 本地数据持久化（LocalStorage）\n✅ 用户登录和会话管理\n\n代码质量：\n✅ 完整的TypeScript类型定义（29个接口字段）\n✅ 详细的中文代码注释（覆盖所有主要组件和算法）\n✅ 健壮的边界检查和错误处理\n  - 数值计算安全性检查（10+ 处）\n  - 数组边界和类型验证（5 处）\n  - 空值保护和可选链（15+ 处）\n  - 除以0防护和百分比边界限制\n✅ 响应式设计和用户体验优化\n\n技术栈：\n- React 18 + TypeScript\n- Vite 5 + Tailwind CSS 3\n- 单文件架构\n- 纯前端，无需后端\n\n构建验证：\n✅ TypeScript编译通过（无错误）\n✅ 生产构建成功（1804个模块）\n✅ 包大小：主包 1.1MB（gzip后 338KB）\n\n注意：此版本为纯前端完整版的里程碑。\n未来如需恢复到此版本，使用: git checkout v1.0.0\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nUI: 优化迭代池区域的间距布局\n\n调整内容：\n- 减小迭代池区域的外边距（p-6 -> p-3），缩短离顶部和左侧待排期区的距离\n- 增大迭代池之间的间隙（拖动条添加 mx-3），改善视觉分隔效果\n\n修改位置：\n- src/wsjf-sprint-planner.tsx:2741 - 外层容器padding调整\n- src/wsjf-sprint-planner.tsx:2767 - 拖动条margin调整\n\n构建验证：\n- TypeScript编译通过\n- Vite生产构建成功\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git merge:*)",
      "Bash(git branch:*)",
      "Bash(git fetch:*)",
      "Bash(git push:*)",
      "Bash(npm run dev:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nFeature: 智能导入功能（CSV/Excel + AI映射）\n\n本次添加完整的需求导入功能，支持CSV和Excel文件上传，并提供智能字段映射和AI辅助映射能力。\n\n核心功能：\n- 📤 文件导入：支持CSV和Excel格式(.csv, .xlsx, .xls)\n- 🧠 智能映射：14个系统字段的模糊匹配算法\n- ✨ AI映射：集成Gemini API进行智能字段映射\n- 👁️ 预览确认：导入前可视化预览和手动调整映射\n- ✅ 数据验证：类型转换、必填字段检查、默认值填充\n\n技术实现：\n\n1. UI组件 (src/wsjf-sprint-planner.tsx)\n   - Line 28: 添加Upload图标导入\n   - Lines 3085-3099: 导入按钮和文件选择器UI\n   - Lines 2823-3019: ImportPreviewModal组件（197行）\n   - Line 3320: Modal渲染集成\n\n2. 状态管理 (Lines 2238-2241)\n   - showImportModal: 控制预览弹窗显示\n   - importData: 存储解析后的原始数据\n   - importMapping: 字段映射关系配置\n   - isAIMappingLoading: AI映射加载状态\n\n3. 核心功能函数 (Lines 2411-2662)\n   \n   handleFileImport():\n   - 文件选择和上传处理\n   - 调用解析函数并打开预览Modal\n   \n   parseFile():\n   - 使用xlsx库解析CSV/Excel文件\n   - 返回JSON格式的数据数组\n   \n   autoMapFields():\n   - 14个系统字段的模糊匹配\n   - 支持中英文多关键词匹配\n   - 双向匹配策略（文件字段包含系统关键词 OR 系统关键词包含文件字段）\n   \n   handleAIMapping():\n   - 集成Gemini Pro API\n   - 构建详细的映射提示词（系统字段说明+Excel列名+示例数据）\n   - JSON响应解析和错误处理\n   - API Key验证和加载状态管理\n   \n   handleConfirmImport():\n   - 数据类型转换（数字、布尔值）\n   - 必填字段验证（name）\n   - 自动计算WSJF分数\n   - 合并到待排期区并按热度排序\n\n4. 字段映射配置\n   支持的系统字段（14个）：\n   - name (需求名称) *必填\n   - submitterName (提交人姓名)\n   - productManager (产品经理)\n   - developer (开发人员)\n   - effortDays (工作量/人天)\n   - bv (业务价值)\n   - tc (时间临界)\n   - hardDeadline (强制截止/DDL)\n   - techProgress (技术进展)\n   - productProgress (产品进展)\n   - type (需求类型)\n   - submitDate (提交日期)\n   - submitter (提交方)\n   - isRMS (是否RMS)\n\n用户体验优化：\n- 预览前5条数据便于验证\n- 显示总记录数和字段数统计\n- 必填字段标注（name字段带*）\n- 映射冲突提示和防重复处理\n- AI映射加载状态显示\n- 导入成功后显示导入数量\n\n构建验证：\n- TypeScript编译：✅ 通过（无错误）\n- 生产构建：✅ 成功（1804个模块，3.21秒）\n- 主包大小：1.25MB（gzip后 388KB）\n\n依赖说明：\n- xlsx: 已有依赖，用于Excel/CSV解析\n- Gemini API: 需要用户在系统设置中配置API Key\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
